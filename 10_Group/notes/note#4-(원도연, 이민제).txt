프랜드와 연산자 중복

프랜드 함수
- 클래스 멤버가 아니어도 나의 데이터에 접근 가능하게 하는 함수
- 클래스의 멤버 함수가 아닌 외부 함수
- friend 키워드로 클래스 내에 선언된 함수
- 프랜드 선언이 필요한 이유 -> 클래스의 멤버로 선언하기에는 무리가 있고, 클래스의 모든 멤버를 자유롭게 접근할 수 있는 일부 외부 함수 작성 시에 필요하다.

프렌드 함수가 되는 3 가지
- 클래스 외부에 선언된 전역 함수
 ex) 외부 함수 equals()를 Rect 클래스에 프렌드로 선언
- 다른 클래스의 멤버 함수 : 다른 클래스의 특정 멤버 함수
 ex) RectManager 클래스의 equals() 멤버 함수를 Rect 클래스에 프렌드로 선언
- 다른 클래스 전체 : 다른 클래스의 모든 멤버 함수
 ex) RectManager 클래스의 모든 멤버 함수를 Rect 클래스에 프렌드로 선언

예제 7-1
friend 함수는 위에 예시와 비슷해서 작성이 되었지만
아래 bool 외부함수 선언에서 if구문 작성이 어려웠다.
equals 함수가 Rect함수의 width, height에 접근이 가능해 진것을 확인 할 수 있었다.

예제 7-2 (페어에게 설명하는 방식으로)

예제 7-3 (friend 부분만 삭제 후 작성)
마찬가지로 마지막 if 구문 작성 중 if (man.equals(a, b)) 해당 구문에서 man = equals로 실수를 했다.

연산자 중복
 + 연산자
 -정수 더하기 / 문자열 합치기 / 색 섞기 / 배열 합치기

연산자 함수 구현 방법
 -클래스의 멤버 함수로 구현
 -외부 함수로 구현하고 클래스에 프렌드 함수로 선언

예제 7-4
코드 하단 부분에서
tmp 임시 객체 생성과 this사용에서 막히는 부분이 있었다.

== 연산자 중복
+= 연산자 중복

문제 옳은것들과 설명하기
3) Power& return_This() {
	return this;
};
x / power의 참조값을 불러오는데 this는 주소값을 불러와서 안된다.

5) Power return_This() {
	return this;
};
x / this 주소인데 객체를 불러와서 안된다.

단항 연산자 중복
 -전위 연산자
 -후위 연산자
예제 7-8 
예제 7-11
18행 tmp.kick = op1 + Power op2.kick; 으로 실수를 하였다.








