객체 포인터 (토론)
	우선 이전 학습에서의 포인터 이해도에 관한 내용으로 토론 진행.
	이전 C언어 수업에서 포인터에 대해 학습한적이 있음 다만, 약 4~5년전의 내용이하 확실한 인지가 어려움
	때문에 강의자료와 교재등을 참고하며 다시 이해하려고 노력함.

예제 4-1 객체 포인터 선언 및 활용 (토론)
	코드를 작성하며 앞서 진행한 학습과정의 실습을 진행함
	강의자료를 참고하며 작성을 완료.

예제 4-2 Circle 클래스의 배열 선언 및 활용 (토론)
	앞선 코드를 활용하여 수정을 진행.
	답안을 먼저 보지 않고 혼자서 결과없을 얻어 낼  수 있도록 시도.

예제 4-3 객체 배열 초기화 (토론)
	배열의 각 원소 객체당 생성자 지정하는 방법을 강의자료를 참고하였으며
	예제 4-3을 실습해보면서 한번 더 이해함.

예제 4-4 Circle 클래스의 2차원 배열 선언 및 활용 (토론)
	위에서 진행했던 것과 같이 코드 답안을 보지 않고 진행 시도
	배열의 경우에는 익숙한 문제였기에 답안을 보지 않고 성공.

예제 4-6 페어 프로그래밍(토론)
	팀원 이민제가 프로그래밍 작성을 담당하였으며, 팀원 원도연이 옆에서 답안을 인지한 상태에서
	프로그래밍 과정을 지켜보았음.
	사용자에게 입력받는 코드는? - 이 부분은 전에 진행한 사항이기에 어렵지않았음
	배열을 동적 할당을 하기 위해 필요한 것은? - 받은 갯수만큼 진행해야 하기에 new연산자가 필요해 보임
	그렇다면 받은 갯수가 0이하일땐? - 예외처리 진행
	출력 된 이후 메모리는? - delete 연산자를 통해 배열 메모리 반환


이후 내용 생략

예제 4-10 객체 배열의 동적 생성과 반환 응용 (토론)
	이전에 배운 내용들을 활용한 것 이다. 사용자에게 값을 입력받고 그 값을 이용하여
	객체 배열을 동적 생성하고, 반환한다.
	

	동적 메모리 할당과 메모리 누수

	this 포인터
	객체 자신 포인터로 클래스의 멤버함수 내에서만 사용됨
	개발자가 선언하는 변수가 아니고, 컴파일러가 선언한 변수임
	멤버 함수에 컴파일러에의해 묵시적으로 삽입 선언되는 매개변수
	
	this 는 매개변수의 이름과 멤버변수의 이름이 같은 경우, 멤버 함수가 객체 자신의 주소를 리턴할 때 
	특히, 연산자 중복 시에 매우 필요함
	this의 제약사항 
	멤버 함수가 아닌 함수에서 this 사용 불가
		객체와 관련성이 없기 때문
	static멤버 함수에서 this 사용 불가
		객체가 생기기 전에 static함수 호출이 있을 수 있기 때문에
	
