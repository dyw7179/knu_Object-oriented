23.11.27 객체지향 정리노트

C++ 입출력 시스템

C++ 입출력 기초
스트림 - 데이터를 전송하는 소프트웨어 모듈
보낸 순서대로 데이터 전달

C++ 스트림 종류
입력스트림 : 데이터를 프로그램으로 전달하는 스트림
출력스트림 : 프로그램에서 출력되는 데이터를 출력 장치, 네트워크, 파일로 전달하는 스트림

C++ 입출력 스트림 버퍼
-C++ 입출력 스트림은 버퍼를 가짐

키 입력 스트림의 버퍼

목적
-입력 장치로부터 입력된 데이터를 프로그램으로 전달하기 전에 일시 저장
-키 입력 도중 수정가능

<enter>키를 사용하여 입력의 끝을 의미

스크린 출력 스트림 버퍼
-프로그램에서 출력된 데이터를 출력장칠 보내기 전에 일시 저장
-출력 장치를 반복적으로 사용하는 비효율성 개선

입출력 방식 2가지
 스트림 입출력 방식
- 앞에 적힌 내용 그대로

 저 수준 입출력 방식
- 키가 입력되는 즉시 프로그램에게 키 값을 전달

ostream 멤버 함수
put, write, flush

예제 11-1
앞에 ostream 멤버 함수를 이용하여 코드를 학습하였다
put()을 연결하여 사용할 수 있다는 것을 확인 할 수 있었다
write()에 관한 함수도 확인 할 수 있었다

istream 멤버 함수
int get()
istream&get(char& ch)

예제 11-2
cin과 get을 사용한 코드 학습

문자열 입력
get()은 1바이트 밖에 못읽지만 get(char*, int)을 사용하여 2바이트를 읽게 한다

예제 11-3
직접 실습은 하지 않음
get(char*, int)를 이용한 코드에 관하여 확인하였다

한 줄 읽기
getline()을 사용하여 한 줄 읽기가 가능하다

예제 11-4
getline을 사용한 코드를 직접 입력해보았다

입력 문자 건너 띄기와 문자 개수 알아내기
ignore함수에 관해 설명을 들음

포맷 입출력
printf()와 유사
 방법 3가지
 포맷 플래그, 포맷 함수, 조작자

포맷 플래그
setf(),unsetf()를 이용하여 포맷 플래그를 사용하는법을 배웠다

예제 11-5 (직접 실습 x)
setf(),unsetf()를 사용하여 포멧 출력을 하는 코드
숫자 30을 사용하여 처음에는 10진수 그 다음 unsetf로 10진수를 해제 후 setf로 16진수로 설정 하는 등의 과정을 확인하였다

포맷 함수 활용
width -  너비값 설정 후 리턴
fill - 빈칸을 문자로 채우고 리턴
precision - 소수까지 보여줄 수 있게 가능

예제 11-6 (직접 실습 x)
width(), fill(), precision()을 사용한 포맷 출력에 대한 코드를 확인하였다

조작자
조작자는 함수
<< or >> 연산자와 함께 사용

예제 11-7 (직접 실습 x)
매개 변수 없는 조작사 사용에 대한 코드를 확인하였다

예제 11-8
setw()와 setfill()을 사용하여 5의 배수를 각각 10진수,8진수, 16진수로 출력하는 코드를 실습하였다

삽입 연산자(<<)와 추출 연산자(>>)

예제 11-9
연산자 함수를 이용한 코드를 작성 해 보았다
추가적으로 friend 함수도 같이 응용이 되는 것을 확인 할 수 있었다

예제 11-10(직접 실습 x)
클래스를 생성 후 객체를 스트림에 출력하는 << 연산자에 관한 코드에 대한 설명을 들었다

추출 연산자

예제 11-11
ostream& operator << (ostream& stream, Point a)와 같은 코드로 point 객체를 입력 받는 >> 연산자를 학습 할 수 있었다

사용자 조작자 만들기

조작자 실행 과정

사용자 정의 조작자 함수 원형
-매개 변수가 없는 조작자의 경우
입력스트림 - istream& manipulatorFunction (istream& ins)
출력스트림 - ostream& manipulatorFunction (ostream& outs)

예제 11-12(직접 실습 x)
조작자를 직접 만들 수 있는 예시를 확인했음

예제 11-13
question을 이용한 조작자를 만드는 예제를 확인 후 실습을 진행하였다
